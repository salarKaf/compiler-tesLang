Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> function_list
Rule 2     function_list -> function_list function
Rule 3     function_list -> function
Rule 4     function -> FUNK ID LPAREN param_list RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR
Rule 5     function -> FUNK ID LPAREN RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR
Rule 6     param_list -> param_list COMMA parameter
Rule 7     param_list -> parameter
Rule 8     parameter -> ID AS type
Rule 9     type -> INT
Rule 10    type -> STR
Rule 11    type -> MSTR
Rule 12    type -> BOOL
Rule 13    type -> VECTOR
Rule 14    type -> NULL
Rule 15    stmt_list -> stmt_list statement
Rule 16    stmt_list -> statement
Rule 17    statement -> var_declaration
Rule 18    statement -> assignment
Rule 19    statement -> function_call_stmt
Rule 20    statement -> return_stmt
Rule 21    statement -> if_stmt
Rule 22    statement -> for_stmt
Rule 23    statement -> while_stmt
Rule 24    var_declaration -> ID DBL_COLON type SEMI_COLON
Rule 25    assignment -> ID EQ expression SEMI_COLON
Rule 26    assignment -> array_access EQ expression SEMI_COLON
Rule 27    array_access -> ID LSQUAREBR expression RSQUAREBR
Rule 28    function_call_stmt -> function_call SEMI_COLON
Rule 29    function_call -> ID LPAREN arg_list RPAREN
Rule 30    function_call -> ID LPAREN RPAREN
Rule 31    function_call -> PRINT LPAREN arg_list RPAREN
Rule 32    function_call -> PRINT LPAREN RPAREN
Rule 33    arg_list -> arg_list COMMA expression
Rule 34    arg_list -> expression
Rule 35    return_stmt -> RETURN expression SEMI_COLON
Rule 36    return_stmt -> RETURN SEMI_COLON
Rule 37    if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
Rule 38    if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
Rule 39    for_stmt -> FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
Rule 40    while_stmt -> WHILE LPAREN expression RPAREN BEGIN stmt_list END
Rule 41    while_stmt -> WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
Rule 42    expression -> expression PLUS expression
Rule 43    expression -> expression MINUS expression
Rule 44    expression -> expression MULTIPLY expression
Rule 45    expression -> expression DIVIDE expression
Rule 46    expression -> expression EQEQ expression
Rule 47    expression -> expression NEQ expression
Rule 48    expression -> expression LESS_THAN expression
Rule 49    expression -> expression GREATER_THAN expression
Rule 50    expression -> expression LTEQ expression
Rule 51    expression -> expression GTEQ expression
Rule 52    expression -> expression AND expression
Rule 53    expression -> expression OR expression
Rule 54    expression -> NOT expression
Rule 55    expression -> MINUS expression
Rule 56    expression -> LPAREN expression RPAREN
Rule 57    expression -> NUMBER
Rule 58    expression -> STRING
Rule 59    expression -> MSTRING
Rule 60    expression -> TRUE
Rule 61    expression -> FALSE
Rule 62    expression -> ID
Rule 63    expression -> array_access
Rule 64    expression -> function_call
Rule 65    expression -> ID LPAREN expression RPAREN
Rule 66    expression -> LEN LPAREN expression RPAREN
Rule 67    expression -> expression QMARK expression COLON expression

Terminals, with rules where they appear

AND                  : 52
AS                   : 8
BEGIN                : 37 38 38 39 40 41
BOOL                 : 12
COLON                : 67
COMMA                : 6 33
DBL_COLON            : 24
DIVIDE               : 45
DO                   : 41
ELSE                 : 38
END                  : 37 38 38 39 40 41
EQ                   : 25 26 39
EQEQ                 : 46
FALSE                : 61
FOR                  : 39
FUNK                 : 4 5
GREATER_THAN         : 4 5 49
GTEQ                 : 51
ID                   : 4 5 8 24 25 27 29 30 39 62 65
IF                   : 37 38
INT                  : 9
LCURLYEBR            : 4 5
LEN                  : 66
LESS_THAN            : 4 5 48
LPAREN               : 4 5 29 30 31 32 39 40 41 56 65 66
LSQUAREBR            : 27 37 37 38 38
LTEQ                 : 50
MINUS                : 43 55
MSTR                 : 11
MSTRING              : 59
MULTIPLY             : 44
NEQ                  : 47
NOT                  : 54
NULL                 : 14
NUMBER               : 57
OR                   : 53
PLUS                 : 42
PRINT                : 31 32
QMARK                : 67
RCURLYEBR            : 4 5
RETURN               : 35 36
RPAREN               : 4 5 29 30 31 32 39 40 41 56 65 66
RSQUAREBR            : 27 37 37 38 38
SEMI_COLON           : 24 25 26 28 35 36
STR                  : 10
STRING               : 58
TO                   : 39
TRUE                 : 60
VECTOR               : 13
WHILE                : 40 41
error                : 

Nonterminals, with rules where they appear

arg_list             : 29 31 33
array_access         : 26 63
assignment           : 18
expression           : 25 26 27 33 34 35 37 38 39 39 40 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 55 56 65 66 67 67 67
for_stmt             : 22
function             : 2 3
function_call        : 28 64
function_call_stmt   : 19
function_list        : 1 2
if_stmt              : 21
param_list           : 4 6
parameter            : 6 7
program              : 0
return_stmt          : 20
statement            : 15 16
stmt_list            : 4 5 15 37 38 38 39 40 41
type                 : 4 5 8 24
var_declaration      : 17
while_stmt           : 23

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function_list
    (2) function_list -> . function_list function
    (3) function_list -> . function
    (4) function -> . FUNK ID LPAREN param_list RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR
    (5) function -> . FUNK ID LPAREN RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR

    FUNK            shift and go to state 4

    program                        shift and go to state 1
    function_list                  shift and go to state 2
    function                       shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> function_list .
    (2) function_list -> function_list . function
    (4) function -> . FUNK ID LPAREN param_list RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR
    (5) function -> . FUNK ID LPAREN RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR

    $end            reduce using rule 1 (program -> function_list .)
    FUNK            shift and go to state 4

    function                       shift and go to state 5

state 3

    (3) function_list -> function .

    FUNK            reduce using rule 3 (function_list -> function .)
    $end            reduce using rule 3 (function_list -> function .)


state 4

    (4) function -> FUNK . ID LPAREN param_list RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR
    (5) function -> FUNK . ID LPAREN RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR

    ID              shift and go to state 6


state 5

    (2) function_list -> function_list function .

    FUNK            reduce using rule 2 (function_list -> function_list function .)
    $end            reduce using rule 2 (function_list -> function_list function .)


state 6

    (4) function -> FUNK ID . LPAREN param_list RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR
    (5) function -> FUNK ID . LPAREN RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR

    LPAREN          shift and go to state 7


state 7

    (4) function -> FUNK ID LPAREN . param_list RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR
    (5) function -> FUNK ID LPAREN . RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR
    (6) param_list -> . param_list COMMA parameter
    (7) param_list -> . parameter
    (8) parameter -> . ID AS type

    RPAREN          shift and go to state 10
    ID              shift and go to state 8

    param_list                     shift and go to state 9
    parameter                      shift and go to state 11

state 8

    (8) parameter -> ID . AS type

    AS              shift and go to state 12


state 9

    (4) function -> FUNK ID LPAREN param_list . RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR
    (6) param_list -> param_list . COMMA parameter

    RPAREN          shift and go to state 13
    COMMA           shift and go to state 14


state 10

    (5) function -> FUNK ID LPAREN RPAREN . LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR

    LESS_THAN       shift and go to state 15


state 11

    (7) param_list -> parameter .

    RPAREN          reduce using rule 7 (param_list -> parameter .)
    COMMA           reduce using rule 7 (param_list -> parameter .)


state 12

    (8) parameter -> ID AS . type
    (9) type -> . INT
    (10) type -> . STR
    (11) type -> . MSTR
    (12) type -> . BOOL
    (13) type -> . VECTOR
    (14) type -> . NULL

    INT             shift and go to state 17
    STR             shift and go to state 18
    MSTR            shift and go to state 19
    BOOL            shift and go to state 20
    VECTOR          shift and go to state 21
    NULL            shift and go to state 22

    type                           shift and go to state 16

state 13

    (4) function -> FUNK ID LPAREN param_list RPAREN . LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR

    LESS_THAN       shift and go to state 23


state 14

    (6) param_list -> param_list COMMA . parameter
    (8) parameter -> . ID AS type

    ID              shift and go to state 8

    parameter                      shift and go to state 24

state 15

    (5) function -> FUNK ID LPAREN RPAREN LESS_THAN . type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR
    (9) type -> . INT
    (10) type -> . STR
    (11) type -> . MSTR
    (12) type -> . BOOL
    (13) type -> . VECTOR
    (14) type -> . NULL

    INT             shift and go to state 17
    STR             shift and go to state 18
    MSTR            shift and go to state 19
    BOOL            shift and go to state 20
    VECTOR          shift and go to state 21
    NULL            shift and go to state 22

    type                           shift and go to state 25

state 16

    (8) parameter -> ID AS type .

    RPAREN          reduce using rule 8 (parameter -> ID AS type .)
    COMMA           reduce using rule 8 (parameter -> ID AS type .)


state 17

    (9) type -> INT .

    RPAREN          reduce using rule 9 (type -> INT .)
    COMMA           reduce using rule 9 (type -> INT .)
    GREATER_THAN    reduce using rule 9 (type -> INT .)
    SEMI_COLON      reduce using rule 9 (type -> INT .)


state 18

    (10) type -> STR .

    RPAREN          reduce using rule 10 (type -> STR .)
    COMMA           reduce using rule 10 (type -> STR .)
    GREATER_THAN    reduce using rule 10 (type -> STR .)
    SEMI_COLON      reduce using rule 10 (type -> STR .)


state 19

    (11) type -> MSTR .

    RPAREN          reduce using rule 11 (type -> MSTR .)
    COMMA           reduce using rule 11 (type -> MSTR .)
    GREATER_THAN    reduce using rule 11 (type -> MSTR .)
    SEMI_COLON      reduce using rule 11 (type -> MSTR .)


state 20

    (12) type -> BOOL .

    RPAREN          reduce using rule 12 (type -> BOOL .)
    COMMA           reduce using rule 12 (type -> BOOL .)
    GREATER_THAN    reduce using rule 12 (type -> BOOL .)
    SEMI_COLON      reduce using rule 12 (type -> BOOL .)


state 21

    (13) type -> VECTOR .

    RPAREN          reduce using rule 13 (type -> VECTOR .)
    COMMA           reduce using rule 13 (type -> VECTOR .)
    GREATER_THAN    reduce using rule 13 (type -> VECTOR .)
    SEMI_COLON      reduce using rule 13 (type -> VECTOR .)


state 22

    (14) type -> NULL .

    RPAREN          reduce using rule 14 (type -> NULL .)
    COMMA           reduce using rule 14 (type -> NULL .)
    GREATER_THAN    reduce using rule 14 (type -> NULL .)
    SEMI_COLON      reduce using rule 14 (type -> NULL .)


state 23

    (4) function -> FUNK ID LPAREN param_list RPAREN LESS_THAN . type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR
    (9) type -> . INT
    (10) type -> . STR
    (11) type -> . MSTR
    (12) type -> . BOOL
    (13) type -> . VECTOR
    (14) type -> . NULL

    INT             shift and go to state 17
    STR             shift and go to state 18
    MSTR            shift and go to state 19
    BOOL            shift and go to state 20
    VECTOR          shift and go to state 21
    NULL            shift and go to state 22

    type                           shift and go to state 26

state 24

    (6) param_list -> param_list COMMA parameter .

    RPAREN          reduce using rule 6 (param_list -> param_list COMMA parameter .)
    COMMA           reduce using rule 6 (param_list -> param_list COMMA parameter .)


state 25

    (5) function -> FUNK ID LPAREN RPAREN LESS_THAN type . GREATER_THAN LCURLYEBR stmt_list RCURLYEBR

    GREATER_THAN    shift and go to state 27


state 26

    (4) function -> FUNK ID LPAREN param_list RPAREN LESS_THAN type . GREATER_THAN LCURLYEBR stmt_list RCURLYEBR

    GREATER_THAN    shift and go to state 28


state 27

    (5) function -> FUNK ID LPAREN RPAREN LESS_THAN type GREATER_THAN . LCURLYEBR stmt_list RCURLYEBR

    LCURLYEBR       shift and go to state 29


state 28

    (4) function -> FUNK ID LPAREN param_list RPAREN LESS_THAN type GREATER_THAN . LCURLYEBR stmt_list RCURLYEBR

    LCURLYEBR       shift and go to state 30


state 29

    (5) function -> FUNK ID LPAREN RPAREN LESS_THAN type GREATER_THAN LCURLYEBR . stmt_list RCURLYEBR
    (15) stmt_list -> . stmt_list statement
    (16) stmt_list -> . statement
    (17) statement -> . var_declaration
    (18) statement -> . assignment
    (19) statement -> . function_call_stmt
    (20) statement -> . return_stmt
    (21) statement -> . if_stmt
    (22) statement -> . for_stmt
    (23) statement -> . while_stmt
    (24) var_declaration -> . ID DBL_COLON type SEMI_COLON
    (25) assignment -> . ID EQ expression SEMI_COLON
    (26) assignment -> . array_access EQ expression SEMI_COLON
    (28) function_call_stmt -> . function_call SEMI_COLON
    (35) return_stmt -> . RETURN expression SEMI_COLON
    (36) return_stmt -> . RETURN SEMI_COLON
    (37) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (39) for_stmt -> . FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
    (40) while_stmt -> . WHILE LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> . WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    ID              shift and go to state 31
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    PRINT           shift and go to state 47

    stmt_list                      shift and go to state 32
    statement                      shift and go to state 33
    var_declaration                shift and go to state 34
    assignment                     shift and go to state 35
    function_call_stmt             shift and go to state 36
    return_stmt                    shift and go to state 37
    if_stmt                        shift and go to state 38
    for_stmt                       shift and go to state 39
    while_stmt                     shift and go to state 40
    array_access                   shift and go to state 41
    function_call                  shift and go to state 42

state 30

    (4) function -> FUNK ID LPAREN param_list RPAREN LESS_THAN type GREATER_THAN LCURLYEBR . stmt_list RCURLYEBR
    (15) stmt_list -> . stmt_list statement
    (16) stmt_list -> . statement
    (17) statement -> . var_declaration
    (18) statement -> . assignment
    (19) statement -> . function_call_stmt
    (20) statement -> . return_stmt
    (21) statement -> . if_stmt
    (22) statement -> . for_stmt
    (23) statement -> . while_stmt
    (24) var_declaration -> . ID DBL_COLON type SEMI_COLON
    (25) assignment -> . ID EQ expression SEMI_COLON
    (26) assignment -> . array_access EQ expression SEMI_COLON
    (28) function_call_stmt -> . function_call SEMI_COLON
    (35) return_stmt -> . RETURN expression SEMI_COLON
    (36) return_stmt -> . RETURN SEMI_COLON
    (37) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (39) for_stmt -> . FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
    (40) while_stmt -> . WHILE LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> . WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    ID              shift and go to state 31
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    PRINT           shift and go to state 47

    stmt_list                      shift and go to state 48
    statement                      shift and go to state 33
    var_declaration                shift and go to state 34
    assignment                     shift and go to state 35
    function_call_stmt             shift and go to state 36
    return_stmt                    shift and go to state 37
    if_stmt                        shift and go to state 38
    for_stmt                       shift and go to state 39
    while_stmt                     shift and go to state 40
    array_access                   shift and go to state 41
    function_call                  shift and go to state 42

state 31

    (24) var_declaration -> ID . DBL_COLON type SEMI_COLON
    (25) assignment -> ID . EQ expression SEMI_COLON
    (27) array_access -> ID . LSQUAREBR expression RSQUAREBR
    (29) function_call -> ID . LPAREN arg_list RPAREN
    (30) function_call -> ID . LPAREN RPAREN

    DBL_COLON       shift and go to state 49
    EQ              shift and go to state 50
    LSQUAREBR       shift and go to state 51
    LPAREN          shift and go to state 52


state 32

    (5) function -> FUNK ID LPAREN RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list . RCURLYEBR
    (15) stmt_list -> stmt_list . statement
    (17) statement -> . var_declaration
    (18) statement -> . assignment
    (19) statement -> . function_call_stmt
    (20) statement -> . return_stmt
    (21) statement -> . if_stmt
    (22) statement -> . for_stmt
    (23) statement -> . while_stmt
    (24) var_declaration -> . ID DBL_COLON type SEMI_COLON
    (25) assignment -> . ID EQ expression SEMI_COLON
    (26) assignment -> . array_access EQ expression SEMI_COLON
    (28) function_call_stmt -> . function_call SEMI_COLON
    (35) return_stmt -> . RETURN expression SEMI_COLON
    (36) return_stmt -> . RETURN SEMI_COLON
    (37) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (39) for_stmt -> . FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
    (40) while_stmt -> . WHILE LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> . WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    RCURLYEBR       shift and go to state 53
    ID              shift and go to state 31
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    PRINT           shift and go to state 47

    statement                      shift and go to state 54
    var_declaration                shift and go to state 34
    assignment                     shift and go to state 35
    function_call_stmt             shift and go to state 36
    return_stmt                    shift and go to state 37
    if_stmt                        shift and go to state 38
    for_stmt                       shift and go to state 39
    while_stmt                     shift and go to state 40
    array_access                   shift and go to state 41
    function_call                  shift and go to state 42

state 33

    (16) stmt_list -> statement .

    RCURLYEBR       reduce using rule 16 (stmt_list -> statement .)
    ID              reduce using rule 16 (stmt_list -> statement .)
    RETURN          reduce using rule 16 (stmt_list -> statement .)
    IF              reduce using rule 16 (stmt_list -> statement .)
    FOR             reduce using rule 16 (stmt_list -> statement .)
    WHILE           reduce using rule 16 (stmt_list -> statement .)
    PRINT           reduce using rule 16 (stmt_list -> statement .)
    END             reduce using rule 16 (stmt_list -> statement .)


state 34

    (17) statement -> var_declaration .

    RCURLYEBR       reduce using rule 17 (statement -> var_declaration .)
    ID              reduce using rule 17 (statement -> var_declaration .)
    RETURN          reduce using rule 17 (statement -> var_declaration .)
    IF              reduce using rule 17 (statement -> var_declaration .)
    FOR             reduce using rule 17 (statement -> var_declaration .)
    WHILE           reduce using rule 17 (statement -> var_declaration .)
    PRINT           reduce using rule 17 (statement -> var_declaration .)
    END             reduce using rule 17 (statement -> var_declaration .)


state 35

    (18) statement -> assignment .

    RCURLYEBR       reduce using rule 18 (statement -> assignment .)
    ID              reduce using rule 18 (statement -> assignment .)
    RETURN          reduce using rule 18 (statement -> assignment .)
    IF              reduce using rule 18 (statement -> assignment .)
    FOR             reduce using rule 18 (statement -> assignment .)
    WHILE           reduce using rule 18 (statement -> assignment .)
    PRINT           reduce using rule 18 (statement -> assignment .)
    END             reduce using rule 18 (statement -> assignment .)


state 36

    (19) statement -> function_call_stmt .

    RCURLYEBR       reduce using rule 19 (statement -> function_call_stmt .)
    ID              reduce using rule 19 (statement -> function_call_stmt .)
    RETURN          reduce using rule 19 (statement -> function_call_stmt .)
    IF              reduce using rule 19 (statement -> function_call_stmt .)
    FOR             reduce using rule 19 (statement -> function_call_stmt .)
    WHILE           reduce using rule 19 (statement -> function_call_stmt .)
    PRINT           reduce using rule 19 (statement -> function_call_stmt .)
    END             reduce using rule 19 (statement -> function_call_stmt .)


state 37

    (20) statement -> return_stmt .

    RCURLYEBR       reduce using rule 20 (statement -> return_stmt .)
    ID              reduce using rule 20 (statement -> return_stmt .)
    RETURN          reduce using rule 20 (statement -> return_stmt .)
    IF              reduce using rule 20 (statement -> return_stmt .)
    FOR             reduce using rule 20 (statement -> return_stmt .)
    WHILE           reduce using rule 20 (statement -> return_stmt .)
    PRINT           reduce using rule 20 (statement -> return_stmt .)
    END             reduce using rule 20 (statement -> return_stmt .)


state 38

    (21) statement -> if_stmt .

    RCURLYEBR       reduce using rule 21 (statement -> if_stmt .)
    ID              reduce using rule 21 (statement -> if_stmt .)
    RETURN          reduce using rule 21 (statement -> if_stmt .)
    IF              reduce using rule 21 (statement -> if_stmt .)
    FOR             reduce using rule 21 (statement -> if_stmt .)
    WHILE           reduce using rule 21 (statement -> if_stmt .)
    PRINT           reduce using rule 21 (statement -> if_stmt .)
    END             reduce using rule 21 (statement -> if_stmt .)


state 39

    (22) statement -> for_stmt .

    RCURLYEBR       reduce using rule 22 (statement -> for_stmt .)
    ID              reduce using rule 22 (statement -> for_stmt .)
    RETURN          reduce using rule 22 (statement -> for_stmt .)
    IF              reduce using rule 22 (statement -> for_stmt .)
    FOR             reduce using rule 22 (statement -> for_stmt .)
    WHILE           reduce using rule 22 (statement -> for_stmt .)
    PRINT           reduce using rule 22 (statement -> for_stmt .)
    END             reduce using rule 22 (statement -> for_stmt .)


state 40

    (23) statement -> while_stmt .

    RCURLYEBR       reduce using rule 23 (statement -> while_stmt .)
    ID              reduce using rule 23 (statement -> while_stmt .)
    RETURN          reduce using rule 23 (statement -> while_stmt .)
    IF              reduce using rule 23 (statement -> while_stmt .)
    FOR             reduce using rule 23 (statement -> while_stmt .)
    WHILE           reduce using rule 23 (statement -> while_stmt .)
    PRINT           reduce using rule 23 (statement -> while_stmt .)
    END             reduce using rule 23 (statement -> while_stmt .)


state 41

    (26) assignment -> array_access . EQ expression SEMI_COLON

    EQ              shift and go to state 55


state 42

    (28) function_call_stmt -> function_call . SEMI_COLON

    SEMI_COLON      shift and go to state 56


state 43

    (35) return_stmt -> RETURN . expression SEMI_COLON
    (36) return_stmt -> RETURN . SEMI_COLON
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    SEMI_COLON      shift and go to state 58
    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 57
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 44

    (37) if_stmt -> IF . LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> IF . LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END

    LSQUAREBR       shift and go to state 71


state 45

    (39) for_stmt -> FOR . LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END

    LPAREN          shift and go to state 72


state 46

    (40) while_stmt -> WHILE . LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> WHILE . LPAREN expression RPAREN DO BEGIN stmt_list END

    LPAREN          shift and go to state 73


state 47

    (31) function_call -> PRINT . LPAREN arg_list RPAREN
    (32) function_call -> PRINT . LPAREN RPAREN

    LPAREN          shift and go to state 74


state 48

    (4) function -> FUNK ID LPAREN param_list RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list . RCURLYEBR
    (15) stmt_list -> stmt_list . statement
    (17) statement -> . var_declaration
    (18) statement -> . assignment
    (19) statement -> . function_call_stmt
    (20) statement -> . return_stmt
    (21) statement -> . if_stmt
    (22) statement -> . for_stmt
    (23) statement -> . while_stmt
    (24) var_declaration -> . ID DBL_COLON type SEMI_COLON
    (25) assignment -> . ID EQ expression SEMI_COLON
    (26) assignment -> . array_access EQ expression SEMI_COLON
    (28) function_call_stmt -> . function_call SEMI_COLON
    (35) return_stmt -> . RETURN expression SEMI_COLON
    (36) return_stmt -> . RETURN SEMI_COLON
    (37) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (39) for_stmt -> . FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
    (40) while_stmt -> . WHILE LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> . WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    RCURLYEBR       shift and go to state 75
    ID              shift and go to state 31
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    PRINT           shift and go to state 47

    statement                      shift and go to state 54
    var_declaration                shift and go to state 34
    assignment                     shift and go to state 35
    function_call_stmt             shift and go to state 36
    return_stmt                    shift and go to state 37
    if_stmt                        shift and go to state 38
    for_stmt                       shift and go to state 39
    while_stmt                     shift and go to state 40
    array_access                   shift and go to state 41
    function_call                  shift and go to state 42

state 49

    (24) var_declaration -> ID DBL_COLON . type SEMI_COLON
    (9) type -> . INT
    (10) type -> . STR
    (11) type -> . MSTR
    (12) type -> . BOOL
    (13) type -> . VECTOR
    (14) type -> . NULL

    INT             shift and go to state 17
    STR             shift and go to state 18
    MSTR            shift and go to state 19
    BOOL            shift and go to state 20
    VECTOR          shift and go to state 21
    NULL            shift and go to state 22

    type                           shift and go to state 76

state 50

    (25) assignment -> ID EQ . expression SEMI_COLON
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 77
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 51

    (27) array_access -> ID LSQUAREBR . expression RSQUAREBR
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 78
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 52

    (29) function_call -> ID LPAREN . arg_list RPAREN
    (30) function_call -> ID LPAREN . RPAREN
    (33) arg_list -> . arg_list COMMA expression
    (34) arg_list -> . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    RPAREN          shift and go to state 80
    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    arg_list                       shift and go to state 79
    expression                     shift and go to state 81
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 53

    (5) function -> FUNK ID LPAREN RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR .

    FUNK            reduce using rule 5 (function -> FUNK ID LPAREN RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR .)
    $end            reduce using rule 5 (function -> FUNK ID LPAREN RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR .)


state 54

    (15) stmt_list -> stmt_list statement .

    RCURLYEBR       reduce using rule 15 (stmt_list -> stmt_list statement .)
    ID              reduce using rule 15 (stmt_list -> stmt_list statement .)
    RETURN          reduce using rule 15 (stmt_list -> stmt_list statement .)
    IF              reduce using rule 15 (stmt_list -> stmt_list statement .)
    FOR             reduce using rule 15 (stmt_list -> stmt_list statement .)
    WHILE           reduce using rule 15 (stmt_list -> stmt_list statement .)
    PRINT           reduce using rule 15 (stmt_list -> stmt_list statement .)
    END             reduce using rule 15 (stmt_list -> stmt_list statement .)


state 55

    (26) assignment -> array_access EQ . expression SEMI_COLON
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    array_access                   shift and go to state 68
    expression                     shift and go to state 82
    function_call                  shift and go to state 69

state 56

    (28) function_call_stmt -> function_call SEMI_COLON .

    RCURLYEBR       reduce using rule 28 (function_call_stmt -> function_call SEMI_COLON .)
    ID              reduce using rule 28 (function_call_stmt -> function_call SEMI_COLON .)
    RETURN          reduce using rule 28 (function_call_stmt -> function_call SEMI_COLON .)
    IF              reduce using rule 28 (function_call_stmt -> function_call SEMI_COLON .)
    FOR             reduce using rule 28 (function_call_stmt -> function_call SEMI_COLON .)
    WHILE           reduce using rule 28 (function_call_stmt -> function_call SEMI_COLON .)
    PRINT           reduce using rule 28 (function_call_stmt -> function_call SEMI_COLON .)
    END             reduce using rule 28 (function_call_stmt -> function_call SEMI_COLON .)


state 57

    (35) return_stmt -> RETURN expression . SEMI_COLON
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      shift and go to state 83
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96


state 58

    (36) return_stmt -> RETURN SEMI_COLON .

    RCURLYEBR       reduce using rule 36 (return_stmt -> RETURN SEMI_COLON .)
    ID              reduce using rule 36 (return_stmt -> RETURN SEMI_COLON .)
    RETURN          reduce using rule 36 (return_stmt -> RETURN SEMI_COLON .)
    IF              reduce using rule 36 (return_stmt -> RETURN SEMI_COLON .)
    FOR             reduce using rule 36 (return_stmt -> RETURN SEMI_COLON .)
    WHILE           reduce using rule 36 (return_stmt -> RETURN SEMI_COLON .)
    PRINT           reduce using rule 36 (return_stmt -> RETURN SEMI_COLON .)
    END             reduce using rule 36 (return_stmt -> RETURN SEMI_COLON .)


state 59

    (55) expression -> MINUS . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 97
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 60

    (54) expression -> NOT . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 98
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 61

    (56) expression -> LPAREN . expression RPAREN
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 99
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 62

    (57) expression -> NUMBER .

    SEMI_COLON      reduce using rule 57 (expression -> NUMBER .)
    PLUS            reduce using rule 57 (expression -> NUMBER .)
    MINUS           reduce using rule 57 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 57 (expression -> NUMBER .)
    DIVIDE          reduce using rule 57 (expression -> NUMBER .)
    EQEQ            reduce using rule 57 (expression -> NUMBER .)
    NEQ             reduce using rule 57 (expression -> NUMBER .)
    LESS_THAN       reduce using rule 57 (expression -> NUMBER .)
    GREATER_THAN    reduce using rule 57 (expression -> NUMBER .)
    LTEQ            reduce using rule 57 (expression -> NUMBER .)
    GTEQ            reduce using rule 57 (expression -> NUMBER .)
    AND             reduce using rule 57 (expression -> NUMBER .)
    OR              reduce using rule 57 (expression -> NUMBER .)
    QMARK           reduce using rule 57 (expression -> NUMBER .)
    RSQUAREBR       reduce using rule 57 (expression -> NUMBER .)
    RPAREN          reduce using rule 57 (expression -> NUMBER .)
    COMMA           reduce using rule 57 (expression -> NUMBER .)
    COLON           reduce using rule 57 (expression -> NUMBER .)
    TO              reduce using rule 57 (expression -> NUMBER .)


state 63

    (58) expression -> STRING .

    SEMI_COLON      reduce using rule 58 (expression -> STRING .)
    PLUS            reduce using rule 58 (expression -> STRING .)
    MINUS           reduce using rule 58 (expression -> STRING .)
    MULTIPLY        reduce using rule 58 (expression -> STRING .)
    DIVIDE          reduce using rule 58 (expression -> STRING .)
    EQEQ            reduce using rule 58 (expression -> STRING .)
    NEQ             reduce using rule 58 (expression -> STRING .)
    LESS_THAN       reduce using rule 58 (expression -> STRING .)
    GREATER_THAN    reduce using rule 58 (expression -> STRING .)
    LTEQ            reduce using rule 58 (expression -> STRING .)
    GTEQ            reduce using rule 58 (expression -> STRING .)
    AND             reduce using rule 58 (expression -> STRING .)
    OR              reduce using rule 58 (expression -> STRING .)
    QMARK           reduce using rule 58 (expression -> STRING .)
    RSQUAREBR       reduce using rule 58 (expression -> STRING .)
    RPAREN          reduce using rule 58 (expression -> STRING .)
    COMMA           reduce using rule 58 (expression -> STRING .)
    COLON           reduce using rule 58 (expression -> STRING .)
    TO              reduce using rule 58 (expression -> STRING .)


state 64

    (59) expression -> MSTRING .

    SEMI_COLON      reduce using rule 59 (expression -> MSTRING .)
    PLUS            reduce using rule 59 (expression -> MSTRING .)
    MINUS           reduce using rule 59 (expression -> MSTRING .)
    MULTIPLY        reduce using rule 59 (expression -> MSTRING .)
    DIVIDE          reduce using rule 59 (expression -> MSTRING .)
    EQEQ            reduce using rule 59 (expression -> MSTRING .)
    NEQ             reduce using rule 59 (expression -> MSTRING .)
    LESS_THAN       reduce using rule 59 (expression -> MSTRING .)
    GREATER_THAN    reduce using rule 59 (expression -> MSTRING .)
    LTEQ            reduce using rule 59 (expression -> MSTRING .)
    GTEQ            reduce using rule 59 (expression -> MSTRING .)
    AND             reduce using rule 59 (expression -> MSTRING .)
    OR              reduce using rule 59 (expression -> MSTRING .)
    QMARK           reduce using rule 59 (expression -> MSTRING .)
    RSQUAREBR       reduce using rule 59 (expression -> MSTRING .)
    RPAREN          reduce using rule 59 (expression -> MSTRING .)
    COMMA           reduce using rule 59 (expression -> MSTRING .)
    COLON           reduce using rule 59 (expression -> MSTRING .)
    TO              reduce using rule 59 (expression -> MSTRING .)


state 65

    (60) expression -> TRUE .

    SEMI_COLON      reduce using rule 60 (expression -> TRUE .)
    PLUS            reduce using rule 60 (expression -> TRUE .)
    MINUS           reduce using rule 60 (expression -> TRUE .)
    MULTIPLY        reduce using rule 60 (expression -> TRUE .)
    DIVIDE          reduce using rule 60 (expression -> TRUE .)
    EQEQ            reduce using rule 60 (expression -> TRUE .)
    NEQ             reduce using rule 60 (expression -> TRUE .)
    LESS_THAN       reduce using rule 60 (expression -> TRUE .)
    GREATER_THAN    reduce using rule 60 (expression -> TRUE .)
    LTEQ            reduce using rule 60 (expression -> TRUE .)
    GTEQ            reduce using rule 60 (expression -> TRUE .)
    AND             reduce using rule 60 (expression -> TRUE .)
    OR              reduce using rule 60 (expression -> TRUE .)
    QMARK           reduce using rule 60 (expression -> TRUE .)
    RSQUAREBR       reduce using rule 60 (expression -> TRUE .)
    RPAREN          reduce using rule 60 (expression -> TRUE .)
    COMMA           reduce using rule 60 (expression -> TRUE .)
    COLON           reduce using rule 60 (expression -> TRUE .)
    TO              reduce using rule 60 (expression -> TRUE .)


state 66

    (61) expression -> FALSE .

    SEMI_COLON      reduce using rule 61 (expression -> FALSE .)
    PLUS            reduce using rule 61 (expression -> FALSE .)
    MINUS           reduce using rule 61 (expression -> FALSE .)
    MULTIPLY        reduce using rule 61 (expression -> FALSE .)
    DIVIDE          reduce using rule 61 (expression -> FALSE .)
    EQEQ            reduce using rule 61 (expression -> FALSE .)
    NEQ             reduce using rule 61 (expression -> FALSE .)
    LESS_THAN       reduce using rule 61 (expression -> FALSE .)
    GREATER_THAN    reduce using rule 61 (expression -> FALSE .)
    LTEQ            reduce using rule 61 (expression -> FALSE .)
    GTEQ            reduce using rule 61 (expression -> FALSE .)
    AND             reduce using rule 61 (expression -> FALSE .)
    OR              reduce using rule 61 (expression -> FALSE .)
    QMARK           reduce using rule 61 (expression -> FALSE .)
    RSQUAREBR       reduce using rule 61 (expression -> FALSE .)
    RPAREN          reduce using rule 61 (expression -> FALSE .)
    COMMA           reduce using rule 61 (expression -> FALSE .)
    COLON           reduce using rule 61 (expression -> FALSE .)
    TO              reduce using rule 61 (expression -> FALSE .)


state 67

    (62) expression -> ID .
    (65) expression -> ID . LPAREN expression RPAREN
    (27) array_access -> ID . LSQUAREBR expression RSQUAREBR
    (29) function_call -> ID . LPAREN arg_list RPAREN
    (30) function_call -> ID . LPAREN RPAREN

    SEMI_COLON      reduce using rule 62 (expression -> ID .)
    PLUS            reduce using rule 62 (expression -> ID .)
    MINUS           reduce using rule 62 (expression -> ID .)
    MULTIPLY        reduce using rule 62 (expression -> ID .)
    DIVIDE          reduce using rule 62 (expression -> ID .)
    EQEQ            reduce using rule 62 (expression -> ID .)
    NEQ             reduce using rule 62 (expression -> ID .)
    LESS_THAN       reduce using rule 62 (expression -> ID .)
    GREATER_THAN    reduce using rule 62 (expression -> ID .)
    LTEQ            reduce using rule 62 (expression -> ID .)
    GTEQ            reduce using rule 62 (expression -> ID .)
    AND             reduce using rule 62 (expression -> ID .)
    OR              reduce using rule 62 (expression -> ID .)
    QMARK           reduce using rule 62 (expression -> ID .)
    RSQUAREBR       reduce using rule 62 (expression -> ID .)
    RPAREN          reduce using rule 62 (expression -> ID .)
    COMMA           reduce using rule 62 (expression -> ID .)
    COLON           reduce using rule 62 (expression -> ID .)
    TO              reduce using rule 62 (expression -> ID .)
    LPAREN          shift and go to state 100
    LSQUAREBR       shift and go to state 51


state 68

    (63) expression -> array_access .

    SEMI_COLON      reduce using rule 63 (expression -> array_access .)
    PLUS            reduce using rule 63 (expression -> array_access .)
    MINUS           reduce using rule 63 (expression -> array_access .)
    MULTIPLY        reduce using rule 63 (expression -> array_access .)
    DIVIDE          reduce using rule 63 (expression -> array_access .)
    EQEQ            reduce using rule 63 (expression -> array_access .)
    NEQ             reduce using rule 63 (expression -> array_access .)
    LESS_THAN       reduce using rule 63 (expression -> array_access .)
    GREATER_THAN    reduce using rule 63 (expression -> array_access .)
    LTEQ            reduce using rule 63 (expression -> array_access .)
    GTEQ            reduce using rule 63 (expression -> array_access .)
    AND             reduce using rule 63 (expression -> array_access .)
    OR              reduce using rule 63 (expression -> array_access .)
    QMARK           reduce using rule 63 (expression -> array_access .)
    RSQUAREBR       reduce using rule 63 (expression -> array_access .)
    RPAREN          reduce using rule 63 (expression -> array_access .)
    COMMA           reduce using rule 63 (expression -> array_access .)
    COLON           reduce using rule 63 (expression -> array_access .)
    TO              reduce using rule 63 (expression -> array_access .)


state 69

    (64) expression -> function_call .

    SEMI_COLON      reduce using rule 64 (expression -> function_call .)
    PLUS            reduce using rule 64 (expression -> function_call .)
    MINUS           reduce using rule 64 (expression -> function_call .)
    MULTIPLY        reduce using rule 64 (expression -> function_call .)
    DIVIDE          reduce using rule 64 (expression -> function_call .)
    EQEQ            reduce using rule 64 (expression -> function_call .)
    NEQ             reduce using rule 64 (expression -> function_call .)
    LESS_THAN       reduce using rule 64 (expression -> function_call .)
    GREATER_THAN    reduce using rule 64 (expression -> function_call .)
    LTEQ            reduce using rule 64 (expression -> function_call .)
    GTEQ            reduce using rule 64 (expression -> function_call .)
    AND             reduce using rule 64 (expression -> function_call .)
    OR              reduce using rule 64 (expression -> function_call .)
    QMARK           reduce using rule 64 (expression -> function_call .)
    RSQUAREBR       reduce using rule 64 (expression -> function_call .)
    RPAREN          reduce using rule 64 (expression -> function_call .)
    COMMA           reduce using rule 64 (expression -> function_call .)
    COLON           reduce using rule 64 (expression -> function_call .)
    TO              reduce using rule 64 (expression -> function_call .)


state 70

    (66) expression -> LEN . LPAREN expression RPAREN

    LPAREN          shift and go to state 101


state 71

    (37) if_stmt -> IF LSQUAREBR . LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> IF LSQUAREBR . LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END

    LSQUAREBR       shift and go to state 102


state 72

    (39) for_stmt -> FOR LPAREN . ID EQ expression TO expression RPAREN BEGIN stmt_list END

    ID              shift and go to state 103


state 73

    (40) while_stmt -> WHILE LPAREN . expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> WHILE LPAREN . expression RPAREN DO BEGIN stmt_list END
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 104
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 74

    (31) function_call -> PRINT LPAREN . arg_list RPAREN
    (32) function_call -> PRINT LPAREN . RPAREN
    (33) arg_list -> . arg_list COMMA expression
    (34) arg_list -> . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    RPAREN          shift and go to state 106
    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    arg_list                       shift and go to state 105
    expression                     shift and go to state 81
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 75

    (4) function -> FUNK ID LPAREN param_list RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR .

    FUNK            reduce using rule 4 (function -> FUNK ID LPAREN param_list RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR .)
    $end            reduce using rule 4 (function -> FUNK ID LPAREN param_list RPAREN LESS_THAN type GREATER_THAN LCURLYEBR stmt_list RCURLYEBR .)


state 76

    (24) var_declaration -> ID DBL_COLON type . SEMI_COLON

    SEMI_COLON      shift and go to state 107


state 77

    (25) assignment -> ID EQ expression . SEMI_COLON
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      shift and go to state 108
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96


state 78

    (27) array_access -> ID LSQUAREBR expression . RSQUAREBR
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    RSQUAREBR       shift and go to state 109
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96


state 79

    (29) function_call -> ID LPAREN arg_list . RPAREN
    (33) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 110
    COMMA           shift and go to state 111


state 80

    (30) function_call -> ID LPAREN RPAREN .

    SEMI_COLON      reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    MULTIPLY        reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    EQEQ            reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    NEQ             reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    LESS_THAN       reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    LTEQ            reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    GTEQ            reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    AND             reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    OR              reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    QMARK           reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    RSQUAREBR       reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    COLON           reduce using rule 30 (function_call -> ID LPAREN RPAREN .)
    TO              reduce using rule 30 (function_call -> ID LPAREN RPAREN .)


state 81

    (34) arg_list -> expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    RPAREN          reduce using rule 34 (arg_list -> expression .)
    COMMA           reduce using rule 34 (arg_list -> expression .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96


state 82

    (26) assignment -> array_access EQ expression . SEMI_COLON
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      shift and go to state 112
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96


state 83

    (35) return_stmt -> RETURN expression SEMI_COLON .

    RCURLYEBR       reduce using rule 35 (return_stmt -> RETURN expression SEMI_COLON .)
    ID              reduce using rule 35 (return_stmt -> RETURN expression SEMI_COLON .)
    RETURN          reduce using rule 35 (return_stmt -> RETURN expression SEMI_COLON .)
    IF              reduce using rule 35 (return_stmt -> RETURN expression SEMI_COLON .)
    FOR             reduce using rule 35 (return_stmt -> RETURN expression SEMI_COLON .)
    WHILE           reduce using rule 35 (return_stmt -> RETURN expression SEMI_COLON .)
    PRINT           reduce using rule 35 (return_stmt -> RETURN expression SEMI_COLON .)
    END             reduce using rule 35 (return_stmt -> RETURN expression SEMI_COLON .)


state 84

    (42) expression -> expression PLUS . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 113
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 85

    (43) expression -> expression MINUS . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 114
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 86

    (44) expression -> expression MULTIPLY . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 115
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 87

    (45) expression -> expression DIVIDE . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 116
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 88

    (46) expression -> expression EQEQ . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 117
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 89

    (47) expression -> expression NEQ . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 118
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 90

    (48) expression -> expression LESS_THAN . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 119
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 91

    (49) expression -> expression GREATER_THAN . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 120
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 92

    (50) expression -> expression LTEQ . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 121
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 93

    (51) expression -> expression GTEQ . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 122
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 94

    (52) expression -> expression AND . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 123
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 95

    (53) expression -> expression OR . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 124
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 96

    (67) expression -> expression QMARK . expression COLON expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 125
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 97

    (55) expression -> MINUS expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      reduce using rule 55 (expression -> MINUS expression .)
    PLUS            reduce using rule 55 (expression -> MINUS expression .)
    MINUS           reduce using rule 55 (expression -> MINUS expression .)
    MULTIPLY        reduce using rule 55 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 55 (expression -> MINUS expression .)
    EQEQ            reduce using rule 55 (expression -> MINUS expression .)
    NEQ             reduce using rule 55 (expression -> MINUS expression .)
    LESS_THAN       reduce using rule 55 (expression -> MINUS expression .)
    GREATER_THAN    reduce using rule 55 (expression -> MINUS expression .)
    LTEQ            reduce using rule 55 (expression -> MINUS expression .)
    GTEQ            reduce using rule 55 (expression -> MINUS expression .)
    AND             reduce using rule 55 (expression -> MINUS expression .)
    OR              reduce using rule 55 (expression -> MINUS expression .)
    QMARK           reduce using rule 55 (expression -> MINUS expression .)
    RSQUAREBR       reduce using rule 55 (expression -> MINUS expression .)
    RPAREN          reduce using rule 55 (expression -> MINUS expression .)
    COMMA           reduce using rule 55 (expression -> MINUS expression .)
    COLON           reduce using rule 55 (expression -> MINUS expression .)
    TO              reduce using rule 55 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 85 ]
  ! MULTIPLY        [ shift and go to state 86 ]
  ! DIVIDE          [ shift and go to state 87 ]
  ! EQEQ            [ shift and go to state 88 ]
  ! NEQ             [ shift and go to state 89 ]
  ! LESS_THAN       [ shift and go to state 90 ]
  ! GREATER_THAN    [ shift and go to state 91 ]
  ! LTEQ            [ shift and go to state 92 ]
  ! GTEQ            [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! QMARK           [ shift and go to state 96 ]


state 98

    (54) expression -> NOT expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      reduce using rule 54 (expression -> NOT expression .)
    PLUS            reduce using rule 54 (expression -> NOT expression .)
    MINUS           reduce using rule 54 (expression -> NOT expression .)
    MULTIPLY        reduce using rule 54 (expression -> NOT expression .)
    DIVIDE          reduce using rule 54 (expression -> NOT expression .)
    EQEQ            reduce using rule 54 (expression -> NOT expression .)
    NEQ             reduce using rule 54 (expression -> NOT expression .)
    LESS_THAN       reduce using rule 54 (expression -> NOT expression .)
    GREATER_THAN    reduce using rule 54 (expression -> NOT expression .)
    LTEQ            reduce using rule 54 (expression -> NOT expression .)
    GTEQ            reduce using rule 54 (expression -> NOT expression .)
    AND             reduce using rule 54 (expression -> NOT expression .)
    OR              reduce using rule 54 (expression -> NOT expression .)
    QMARK           reduce using rule 54 (expression -> NOT expression .)
    RSQUAREBR       reduce using rule 54 (expression -> NOT expression .)
    RPAREN          reduce using rule 54 (expression -> NOT expression .)
    COMMA           reduce using rule 54 (expression -> NOT expression .)
    COLON           reduce using rule 54 (expression -> NOT expression .)
    TO              reduce using rule 54 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 85 ]
  ! MULTIPLY        [ shift and go to state 86 ]
  ! DIVIDE          [ shift and go to state 87 ]
  ! EQEQ            [ shift and go to state 88 ]
  ! NEQ             [ shift and go to state 89 ]
  ! LESS_THAN       [ shift and go to state 90 ]
  ! GREATER_THAN    [ shift and go to state 91 ]
  ! LTEQ            [ shift and go to state 92 ]
  ! GTEQ            [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! QMARK           [ shift and go to state 96 ]


state 99

    (56) expression -> LPAREN expression . RPAREN
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 126
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96


state 100

    (65) expression -> ID LPAREN . expression RPAREN
    (29) function_call -> ID LPAREN . arg_list RPAREN
    (30) function_call -> ID LPAREN . RPAREN
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (33) arg_list -> . arg_list COMMA expression
    (34) arg_list -> . expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    RPAREN          shift and go to state 80
    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 127
    arg_list                       shift and go to state 79
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 101

    (66) expression -> LEN LPAREN . expression RPAREN
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 128
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 102

    (37) if_stmt -> IF LSQUAREBR LSQUAREBR . expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> IF LSQUAREBR LSQUAREBR . expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 129
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 103

    (39) for_stmt -> FOR LPAREN ID . EQ expression TO expression RPAREN BEGIN stmt_list END

    EQ              shift and go to state 130


state 104

    (40) while_stmt -> WHILE LPAREN expression . RPAREN BEGIN stmt_list END
    (41) while_stmt -> WHILE LPAREN expression . RPAREN DO BEGIN stmt_list END
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 131
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96


state 105

    (31) function_call -> PRINT LPAREN arg_list . RPAREN
    (33) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 132
    COMMA           shift and go to state 111


state 106

    (32) function_call -> PRINT LPAREN RPAREN .

    SEMI_COLON      reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    PLUS            reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    MINUS           reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    MULTIPLY        reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    DIVIDE          reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    EQEQ            reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    NEQ             reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    LESS_THAN       reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    LTEQ            reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    GTEQ            reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    AND             reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    OR              reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    QMARK           reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    RSQUAREBR       reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    RPAREN          reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    COMMA           reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    COLON           reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)
    TO              reduce using rule 32 (function_call -> PRINT LPAREN RPAREN .)


state 107

    (24) var_declaration -> ID DBL_COLON type SEMI_COLON .

    RCURLYEBR       reduce using rule 24 (var_declaration -> ID DBL_COLON type SEMI_COLON .)
    ID              reduce using rule 24 (var_declaration -> ID DBL_COLON type SEMI_COLON .)
    RETURN          reduce using rule 24 (var_declaration -> ID DBL_COLON type SEMI_COLON .)
    IF              reduce using rule 24 (var_declaration -> ID DBL_COLON type SEMI_COLON .)
    FOR             reduce using rule 24 (var_declaration -> ID DBL_COLON type SEMI_COLON .)
    WHILE           reduce using rule 24 (var_declaration -> ID DBL_COLON type SEMI_COLON .)
    PRINT           reduce using rule 24 (var_declaration -> ID DBL_COLON type SEMI_COLON .)
    END             reduce using rule 24 (var_declaration -> ID DBL_COLON type SEMI_COLON .)


state 108

    (25) assignment -> ID EQ expression SEMI_COLON .

    RCURLYEBR       reduce using rule 25 (assignment -> ID EQ expression SEMI_COLON .)
    ID              reduce using rule 25 (assignment -> ID EQ expression SEMI_COLON .)
    RETURN          reduce using rule 25 (assignment -> ID EQ expression SEMI_COLON .)
    IF              reduce using rule 25 (assignment -> ID EQ expression SEMI_COLON .)
    FOR             reduce using rule 25 (assignment -> ID EQ expression SEMI_COLON .)
    WHILE           reduce using rule 25 (assignment -> ID EQ expression SEMI_COLON .)
    PRINT           reduce using rule 25 (assignment -> ID EQ expression SEMI_COLON .)
    END             reduce using rule 25 (assignment -> ID EQ expression SEMI_COLON .)


state 109

    (27) array_access -> ID LSQUAREBR expression RSQUAREBR .

    EQ              reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    SEMI_COLON      reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    PLUS            reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    MINUS           reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    MULTIPLY        reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    DIVIDE          reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    EQEQ            reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    NEQ             reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    LESS_THAN       reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    GREATER_THAN    reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    LTEQ            reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    GTEQ            reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    AND             reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    OR              reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    QMARK           reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    RSQUAREBR       reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    RPAREN          reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    COMMA           reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    COLON           reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)
    TO              reduce using rule 27 (array_access -> ID LSQUAREBR expression RSQUAREBR .)


state 110

    (29) function_call -> ID LPAREN arg_list RPAREN .

    SEMI_COLON      reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    MULTIPLY        reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    DIVIDE          reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    EQEQ            reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    NEQ             reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    LESS_THAN       reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    GREATER_THAN    reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    LTEQ            reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    GTEQ            reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    AND             reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    OR              reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    QMARK           reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    RSQUAREBR       reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    COLON           reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)
    TO              reduce using rule 29 (function_call -> ID LPAREN arg_list RPAREN .)


state 111

    (33) arg_list -> arg_list COMMA . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 133
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 112

    (26) assignment -> array_access EQ expression SEMI_COLON .

    RCURLYEBR       reduce using rule 26 (assignment -> array_access EQ expression SEMI_COLON .)
    ID              reduce using rule 26 (assignment -> array_access EQ expression SEMI_COLON .)
    RETURN          reduce using rule 26 (assignment -> array_access EQ expression SEMI_COLON .)
    IF              reduce using rule 26 (assignment -> array_access EQ expression SEMI_COLON .)
    FOR             reduce using rule 26 (assignment -> array_access EQ expression SEMI_COLON .)
    WHILE           reduce using rule 26 (assignment -> array_access EQ expression SEMI_COLON .)
    PRINT           reduce using rule 26 (assignment -> array_access EQ expression SEMI_COLON .)
    END             reduce using rule 26 (assignment -> array_access EQ expression SEMI_COLON .)


state 113

    (42) expression -> expression PLUS expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      reduce using rule 42 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 42 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 42 (expression -> expression PLUS expression .)
    EQEQ            reduce using rule 42 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 42 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 42 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 42 (expression -> expression PLUS expression .)
    LTEQ            reduce using rule 42 (expression -> expression PLUS expression .)
    GTEQ            reduce using rule 42 (expression -> expression PLUS expression .)
    AND             reduce using rule 42 (expression -> expression PLUS expression .)
    OR              reduce using rule 42 (expression -> expression PLUS expression .)
    QMARK           reduce using rule 42 (expression -> expression PLUS expression .)
    RSQUAREBR       reduce using rule 42 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 42 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 42 (expression -> expression PLUS expression .)
    COLON           reduce using rule 42 (expression -> expression PLUS expression .)
    TO              reduce using rule 42 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87

  ! MULTIPLY        [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 85 ]
  ! EQEQ            [ shift and go to state 88 ]
  ! NEQ             [ shift and go to state 89 ]
  ! LESS_THAN       [ shift and go to state 90 ]
  ! GREATER_THAN    [ shift and go to state 91 ]
  ! LTEQ            [ shift and go to state 92 ]
  ! GTEQ            [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! QMARK           [ shift and go to state 96 ]


state 114

    (43) expression -> expression MINUS expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      reduce using rule 43 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 43 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 43 (expression -> expression MINUS expression .)
    EQEQ            reduce using rule 43 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 43 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 43 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 43 (expression -> expression MINUS expression .)
    LTEQ            reduce using rule 43 (expression -> expression MINUS expression .)
    GTEQ            reduce using rule 43 (expression -> expression MINUS expression .)
    AND             reduce using rule 43 (expression -> expression MINUS expression .)
    OR              reduce using rule 43 (expression -> expression MINUS expression .)
    QMARK           reduce using rule 43 (expression -> expression MINUS expression .)
    RSQUAREBR       reduce using rule 43 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 43 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 43 (expression -> expression MINUS expression .)
    COLON           reduce using rule 43 (expression -> expression MINUS expression .)
    TO              reduce using rule 43 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87

  ! MULTIPLY        [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 85 ]
  ! EQEQ            [ shift and go to state 88 ]
  ! NEQ             [ shift and go to state 89 ]
  ! LESS_THAN       [ shift and go to state 90 ]
  ! GREATER_THAN    [ shift and go to state 91 ]
  ! LTEQ            [ shift and go to state 92 ]
  ! GTEQ            [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! QMARK           [ shift and go to state 96 ]


state 115

    (44) expression -> expression MULTIPLY expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      reduce using rule 44 (expression -> expression MULTIPLY expression .)
    PLUS            reduce using rule 44 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 44 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 44 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 44 (expression -> expression MULTIPLY expression .)
    EQEQ            reduce using rule 44 (expression -> expression MULTIPLY expression .)
    NEQ             reduce using rule 44 (expression -> expression MULTIPLY expression .)
    LESS_THAN       reduce using rule 44 (expression -> expression MULTIPLY expression .)
    GREATER_THAN    reduce using rule 44 (expression -> expression MULTIPLY expression .)
    LTEQ            reduce using rule 44 (expression -> expression MULTIPLY expression .)
    GTEQ            reduce using rule 44 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 44 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 44 (expression -> expression MULTIPLY expression .)
    QMARK           reduce using rule 44 (expression -> expression MULTIPLY expression .)
    RSQUAREBR       reduce using rule 44 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 44 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 44 (expression -> expression MULTIPLY expression .)
    COLON           reduce using rule 44 (expression -> expression MULTIPLY expression .)
    TO              reduce using rule 44 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 85 ]
  ! MULTIPLY        [ shift and go to state 86 ]
  ! DIVIDE          [ shift and go to state 87 ]
  ! EQEQ            [ shift and go to state 88 ]
  ! NEQ             [ shift and go to state 89 ]
  ! LESS_THAN       [ shift and go to state 90 ]
  ! GREATER_THAN    [ shift and go to state 91 ]
  ! LTEQ            [ shift and go to state 92 ]
  ! GTEQ            [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! QMARK           [ shift and go to state 96 ]


state 116

    (45) expression -> expression DIVIDE expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      reduce using rule 45 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 45 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 45 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 45 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 45 (expression -> expression DIVIDE expression .)
    EQEQ            reduce using rule 45 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 45 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 45 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 45 (expression -> expression DIVIDE expression .)
    LTEQ            reduce using rule 45 (expression -> expression DIVIDE expression .)
    GTEQ            reduce using rule 45 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 45 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 45 (expression -> expression DIVIDE expression .)
    QMARK           reduce using rule 45 (expression -> expression DIVIDE expression .)
    RSQUAREBR       reduce using rule 45 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 45 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 45 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 45 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 45 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 84 ]
  ! MINUS           [ shift and go to state 85 ]
  ! MULTIPLY        [ shift and go to state 86 ]
  ! DIVIDE          [ shift and go to state 87 ]
  ! EQEQ            [ shift and go to state 88 ]
  ! NEQ             [ shift and go to state 89 ]
  ! LESS_THAN       [ shift and go to state 90 ]
  ! GREATER_THAN    [ shift and go to state 91 ]
  ! LTEQ            [ shift and go to state 92 ]
  ! GTEQ            [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! QMARK           [ shift and go to state 96 ]


state 117

    (46) expression -> expression EQEQ expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      reduce using rule 46 (expression -> expression EQEQ expression .)
    EQEQ            reduce using rule 46 (expression -> expression EQEQ expression .)
    NEQ             reduce using rule 46 (expression -> expression EQEQ expression .)
    AND             reduce using rule 46 (expression -> expression EQEQ expression .)
    OR              reduce using rule 46 (expression -> expression EQEQ expression .)
    QMARK           reduce using rule 46 (expression -> expression EQEQ expression .)
    RSQUAREBR       reduce using rule 46 (expression -> expression EQEQ expression .)
    RPAREN          reduce using rule 46 (expression -> expression EQEQ expression .)
    COMMA           reduce using rule 46 (expression -> expression EQEQ expression .)
    COLON           reduce using rule 46 (expression -> expression EQEQ expression .)
    TO              reduce using rule 46 (expression -> expression EQEQ expression .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93

  ! PLUS            [ reduce using rule 46 (expression -> expression EQEQ expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression EQEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 46 (expression -> expression EQEQ expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression EQEQ expression .) ]
  ! LESS_THAN       [ reduce using rule 46 (expression -> expression EQEQ expression .) ]
  ! GREATER_THAN    [ reduce using rule 46 (expression -> expression EQEQ expression .) ]
  ! LTEQ            [ reduce using rule 46 (expression -> expression EQEQ expression .) ]
  ! GTEQ            [ reduce using rule 46 (expression -> expression EQEQ expression .) ]
  ! EQEQ            [ shift and go to state 88 ]
  ! NEQ             [ shift and go to state 89 ]
  ! AND             [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! QMARK           [ shift and go to state 96 ]


state 118

    (47) expression -> expression NEQ expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      reduce using rule 47 (expression -> expression NEQ expression .)
    EQEQ            reduce using rule 47 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 47 (expression -> expression NEQ expression .)
    AND             reduce using rule 47 (expression -> expression NEQ expression .)
    OR              reduce using rule 47 (expression -> expression NEQ expression .)
    QMARK           reduce using rule 47 (expression -> expression NEQ expression .)
    RSQUAREBR       reduce using rule 47 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 47 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 47 (expression -> expression NEQ expression .)
    COLON           reduce using rule 47 (expression -> expression NEQ expression .)
    TO              reduce using rule 47 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93

  ! PLUS            [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! LESS_THAN       [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! GREATER_THAN    [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! LTEQ            [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! GTEQ            [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! EQEQ            [ shift and go to state 88 ]
  ! NEQ             [ shift and go to state 89 ]
  ! AND             [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! QMARK           [ shift and go to state 96 ]


state 119

    (48) expression -> expression LESS_THAN expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      reduce using rule 48 (expression -> expression LESS_THAN expression .)
    EQEQ            reduce using rule 48 (expression -> expression LESS_THAN expression .)
    NEQ             reduce using rule 48 (expression -> expression LESS_THAN expression .)
    LESS_THAN       reduce using rule 48 (expression -> expression LESS_THAN expression .)
    GREATER_THAN    reduce using rule 48 (expression -> expression LESS_THAN expression .)
    LTEQ            reduce using rule 48 (expression -> expression LESS_THAN expression .)
    GTEQ            reduce using rule 48 (expression -> expression LESS_THAN expression .)
    AND             reduce using rule 48 (expression -> expression LESS_THAN expression .)
    OR              reduce using rule 48 (expression -> expression LESS_THAN expression .)
    QMARK           reduce using rule 48 (expression -> expression LESS_THAN expression .)
    RSQUAREBR       reduce using rule 48 (expression -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 48 (expression -> expression LESS_THAN expression .)
    COMMA           reduce using rule 48 (expression -> expression LESS_THAN expression .)
    COLON           reduce using rule 48 (expression -> expression LESS_THAN expression .)
    TO              reduce using rule 48 (expression -> expression LESS_THAN expression .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87

  ! PLUS            [ reduce using rule 48 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression LESS_THAN expression .) ]
  ! MULTIPLY        [ reduce using rule 48 (expression -> expression LESS_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression LESS_THAN expression .) ]
  ! EQEQ            [ shift and go to state 88 ]
  ! NEQ             [ shift and go to state 89 ]
  ! LESS_THAN       [ shift and go to state 90 ]
  ! GREATER_THAN    [ shift and go to state 91 ]
  ! LTEQ            [ shift and go to state 92 ]
  ! GTEQ            [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! QMARK           [ shift and go to state 96 ]


state 120

    (49) expression -> expression GREATER_THAN expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    EQEQ            reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    NEQ             reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    LESS_THAN       reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN    reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    LTEQ            reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    GTEQ            reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    AND             reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    OR              reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    QMARK           reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    RSQUAREBR       reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    COMMA           reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    COLON           reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    TO              reduce using rule 49 (expression -> expression GREATER_THAN expression .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87

  ! PLUS            [ reduce using rule 49 (expression -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression GREATER_THAN expression .) ]
  ! MULTIPLY        [ reduce using rule 49 (expression -> expression GREATER_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression GREATER_THAN expression .) ]
  ! EQEQ            [ shift and go to state 88 ]
  ! NEQ             [ shift and go to state 89 ]
  ! LESS_THAN       [ shift and go to state 90 ]
  ! GREATER_THAN    [ shift and go to state 91 ]
  ! LTEQ            [ shift and go to state 92 ]
  ! GTEQ            [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! QMARK           [ shift and go to state 96 ]


state 121

    (50) expression -> expression LTEQ expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      reduce using rule 50 (expression -> expression LTEQ expression .)
    EQEQ            reduce using rule 50 (expression -> expression LTEQ expression .)
    NEQ             reduce using rule 50 (expression -> expression LTEQ expression .)
    LESS_THAN       reduce using rule 50 (expression -> expression LTEQ expression .)
    GREATER_THAN    reduce using rule 50 (expression -> expression LTEQ expression .)
    LTEQ            reduce using rule 50 (expression -> expression LTEQ expression .)
    GTEQ            reduce using rule 50 (expression -> expression LTEQ expression .)
    AND             reduce using rule 50 (expression -> expression LTEQ expression .)
    OR              reduce using rule 50 (expression -> expression LTEQ expression .)
    QMARK           reduce using rule 50 (expression -> expression LTEQ expression .)
    RSQUAREBR       reduce using rule 50 (expression -> expression LTEQ expression .)
    RPAREN          reduce using rule 50 (expression -> expression LTEQ expression .)
    COMMA           reduce using rule 50 (expression -> expression LTEQ expression .)
    COLON           reduce using rule 50 (expression -> expression LTEQ expression .)
    TO              reduce using rule 50 (expression -> expression LTEQ expression .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87

  ! PLUS            [ reduce using rule 50 (expression -> expression LTEQ expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression LTEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 50 (expression -> expression LTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> expression LTEQ expression .) ]
  ! EQEQ            [ shift and go to state 88 ]
  ! NEQ             [ shift and go to state 89 ]
  ! LESS_THAN       [ shift and go to state 90 ]
  ! GREATER_THAN    [ shift and go to state 91 ]
  ! LTEQ            [ shift and go to state 92 ]
  ! GTEQ            [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! QMARK           [ shift and go to state 96 ]


state 122

    (51) expression -> expression GTEQ expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      reduce using rule 51 (expression -> expression GTEQ expression .)
    EQEQ            reduce using rule 51 (expression -> expression GTEQ expression .)
    NEQ             reduce using rule 51 (expression -> expression GTEQ expression .)
    LESS_THAN       reduce using rule 51 (expression -> expression GTEQ expression .)
    GREATER_THAN    reduce using rule 51 (expression -> expression GTEQ expression .)
    LTEQ            reduce using rule 51 (expression -> expression GTEQ expression .)
    GTEQ            reduce using rule 51 (expression -> expression GTEQ expression .)
    AND             reduce using rule 51 (expression -> expression GTEQ expression .)
    OR              reduce using rule 51 (expression -> expression GTEQ expression .)
    QMARK           reduce using rule 51 (expression -> expression GTEQ expression .)
    RSQUAREBR       reduce using rule 51 (expression -> expression GTEQ expression .)
    RPAREN          reduce using rule 51 (expression -> expression GTEQ expression .)
    COMMA           reduce using rule 51 (expression -> expression GTEQ expression .)
    COLON           reduce using rule 51 (expression -> expression GTEQ expression .)
    TO              reduce using rule 51 (expression -> expression GTEQ expression .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87

  ! PLUS            [ reduce using rule 51 (expression -> expression GTEQ expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression GTEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 51 (expression -> expression GTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> expression GTEQ expression .) ]
  ! EQEQ            [ shift and go to state 88 ]
  ! NEQ             [ shift and go to state 89 ]
  ! LESS_THAN       [ shift and go to state 90 ]
  ! GREATER_THAN    [ shift and go to state 91 ]
  ! LTEQ            [ shift and go to state 92 ]
  ! GTEQ            [ shift and go to state 93 ]
  ! AND             [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! QMARK           [ shift and go to state 96 ]


state 123

    (52) expression -> expression AND expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      reduce using rule 52 (expression -> expression AND expression .)
    AND             reduce using rule 52 (expression -> expression AND expression .)
    OR              reduce using rule 52 (expression -> expression AND expression .)
    QMARK           reduce using rule 52 (expression -> expression AND expression .)
    RSQUAREBR       reduce using rule 52 (expression -> expression AND expression .)
    RPAREN          reduce using rule 52 (expression -> expression AND expression .)
    COMMA           reduce using rule 52 (expression -> expression AND expression .)
    COLON           reduce using rule 52 (expression -> expression AND expression .)
    TO              reduce using rule 52 (expression -> expression AND expression .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93

  ! PLUS            [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! EQEQ            [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! LESS_THAN       [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! GREATER_THAN    [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! LTEQ            [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! GTEQ            [ reduce using rule 52 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 94 ]
  ! OR              [ shift and go to state 95 ]
  ! QMARK           [ shift and go to state 96 ]


state 124

    (53) expression -> expression OR expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    SEMI_COLON      reduce using rule 53 (expression -> expression OR expression .)
    OR              reduce using rule 53 (expression -> expression OR expression .)
    QMARK           reduce using rule 53 (expression -> expression OR expression .)
    RSQUAREBR       reduce using rule 53 (expression -> expression OR expression .)
    RPAREN          reduce using rule 53 (expression -> expression OR expression .)
    COMMA           reduce using rule 53 (expression -> expression OR expression .)
    COLON           reduce using rule 53 (expression -> expression OR expression .)
    TO              reduce using rule 53 (expression -> expression OR expression .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94

  ! PLUS            [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! EQEQ            [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! LESS_THAN       [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! GREATER_THAN    [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! LTEQ            [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! GTEQ            [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 95 ]
  ! QMARK           [ shift and go to state 96 ]


state 125

    (67) expression -> expression QMARK expression . COLON expression
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    COLON           shift and go to state 134
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96


state 126

    (56) expression -> LPAREN expression RPAREN .

    SEMI_COLON      reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    EQEQ            reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    LTEQ            reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    GTEQ            reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    QMARK           reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    RSQUAREBR       reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 56 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 56 (expression -> LPAREN expression RPAREN .)


state 127

    (65) expression -> ID LPAREN expression . RPAREN
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression
    (34) arg_list -> expression .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 135
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96
    COMMA           reduce using rule 34 (arg_list -> expression .)

  ! RPAREN          [ reduce using rule 34 (arg_list -> expression .) ]


state 128

    (66) expression -> LEN LPAREN expression . RPAREN
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 136
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96


state 129

    (37) if_stmt -> IF LSQUAREBR LSQUAREBR expression . RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> IF LSQUAREBR LSQUAREBR expression . RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    RSQUAREBR       shift and go to state 137
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96


state 130

    (39) for_stmt -> FOR LPAREN ID EQ . expression TO expression RPAREN BEGIN stmt_list END
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 138
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 131

    (40) while_stmt -> WHILE LPAREN expression RPAREN . BEGIN stmt_list END
    (41) while_stmt -> WHILE LPAREN expression RPAREN . DO BEGIN stmt_list END

    BEGIN           shift and go to state 139
    DO              shift and go to state 140


state 132

    (31) function_call -> PRINT LPAREN arg_list RPAREN .

    SEMI_COLON      reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    MULTIPLY        reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    DIVIDE          reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    EQEQ            reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    NEQ             reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    LESS_THAN       reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    GREATER_THAN    reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    LTEQ            reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    GTEQ            reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    AND             reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    OR              reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    QMARK           reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    RSQUAREBR       reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    COLON           reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)
    TO              reduce using rule 31 (function_call -> PRINT LPAREN arg_list RPAREN .)


state 133

    (33) arg_list -> arg_list COMMA expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    RPAREN          reduce using rule 33 (arg_list -> arg_list COMMA expression .)
    COMMA           reduce using rule 33 (arg_list -> arg_list COMMA expression .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96


state 134

    (67) expression -> expression QMARK expression COLON . expression
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 141
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 135

    (65) expression -> ID LPAREN expression RPAREN .

    SEMI_COLON      reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    PLUS            reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    MINUS           reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    EQEQ            reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    NEQ             reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    LTEQ            reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    GTEQ            reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    AND             reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    OR              reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    QMARK           reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    RSQUAREBR       reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    RPAREN          reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    COMMA           reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    COLON           reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)
    TO              reduce using rule 65 (expression -> ID LPAREN expression RPAREN .)


state 136

    (66) expression -> LEN LPAREN expression RPAREN .

    SEMI_COLON      reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    PLUS            reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    MINUS           reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    EQEQ            reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    NEQ             reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    LTEQ            reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    GTEQ            reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    AND             reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    OR              reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    QMARK           reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    RSQUAREBR       reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    RPAREN          reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    COMMA           reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    COLON           reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)
    TO              reduce using rule 66 (expression -> LEN LPAREN expression RPAREN .)


state 137

    (37) if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR . RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR . RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END

    RSQUAREBR       shift and go to state 142


state 138

    (39) for_stmt -> FOR LPAREN ID EQ expression . TO expression RPAREN BEGIN stmt_list END
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    TO              shift and go to state 143
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96


state 139

    (40) while_stmt -> WHILE LPAREN expression RPAREN BEGIN . stmt_list END
    (15) stmt_list -> . stmt_list statement
    (16) stmt_list -> . statement
    (17) statement -> . var_declaration
    (18) statement -> . assignment
    (19) statement -> . function_call_stmt
    (20) statement -> . return_stmt
    (21) statement -> . if_stmt
    (22) statement -> . for_stmt
    (23) statement -> . while_stmt
    (24) var_declaration -> . ID DBL_COLON type SEMI_COLON
    (25) assignment -> . ID EQ expression SEMI_COLON
    (26) assignment -> . array_access EQ expression SEMI_COLON
    (28) function_call_stmt -> . function_call SEMI_COLON
    (35) return_stmt -> . RETURN expression SEMI_COLON
    (36) return_stmt -> . RETURN SEMI_COLON
    (37) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (39) for_stmt -> . FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
    (40) while_stmt -> . WHILE LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> . WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    ID              shift and go to state 31
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    PRINT           shift and go to state 47

    stmt_list                      shift and go to state 144
    statement                      shift and go to state 33
    var_declaration                shift and go to state 34
    assignment                     shift and go to state 35
    function_call_stmt             shift and go to state 36
    return_stmt                    shift and go to state 37
    if_stmt                        shift and go to state 38
    for_stmt                       shift and go to state 39
    while_stmt                     shift and go to state 40
    array_access                   shift and go to state 41
    function_call                  shift and go to state 42

state 140

    (41) while_stmt -> WHILE LPAREN expression RPAREN DO . BEGIN stmt_list END

    BEGIN           shift and go to state 145


state 141

    (67) expression -> expression QMARK expression COLON expression .
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for QMARK resolved as shift
    SEMI_COLON      reduce using rule 67 (expression -> expression QMARK expression COLON expression .)
    RSQUAREBR       reduce using rule 67 (expression -> expression QMARK expression COLON expression .)
    RPAREN          reduce using rule 67 (expression -> expression QMARK expression COLON expression .)
    COMMA           reduce using rule 67 (expression -> expression QMARK expression COLON expression .)
    COLON           reduce using rule 67 (expression -> expression QMARK expression COLON expression .)
    TO              reduce using rule 67 (expression -> expression QMARK expression COLON expression .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96

  ! PLUS            [ reduce using rule 67 (expression -> expression QMARK expression COLON expression .) ]
  ! MINUS           [ reduce using rule 67 (expression -> expression QMARK expression COLON expression .) ]
  ! MULTIPLY        [ reduce using rule 67 (expression -> expression QMARK expression COLON expression .) ]
  ! DIVIDE          [ reduce using rule 67 (expression -> expression QMARK expression COLON expression .) ]
  ! EQEQ            [ reduce using rule 67 (expression -> expression QMARK expression COLON expression .) ]
  ! NEQ             [ reduce using rule 67 (expression -> expression QMARK expression COLON expression .) ]
  ! LESS_THAN       [ reduce using rule 67 (expression -> expression QMARK expression COLON expression .) ]
  ! GREATER_THAN    [ reduce using rule 67 (expression -> expression QMARK expression COLON expression .) ]
  ! LTEQ            [ reduce using rule 67 (expression -> expression QMARK expression COLON expression .) ]
  ! GTEQ            [ reduce using rule 67 (expression -> expression QMARK expression COLON expression .) ]
  ! AND             [ reduce using rule 67 (expression -> expression QMARK expression COLON expression .) ]
  ! OR              [ reduce using rule 67 (expression -> expression QMARK expression COLON expression .) ]
  ! QMARK           [ reduce using rule 67 (expression -> expression QMARK expression COLON expression .) ]


state 142

    (37) if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR . BEGIN stmt_list END
    (38) if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR . BEGIN stmt_list END ELSE BEGIN stmt_list END

    BEGIN           shift and go to state 146


state 143

    (39) for_stmt -> FOR LPAREN ID EQ expression TO . expression RPAREN BEGIN stmt_list END
    (42) expression -> . expression PLUS expression
    (43) expression -> . expression MINUS expression
    (44) expression -> . expression MULTIPLY expression
    (45) expression -> . expression DIVIDE expression
    (46) expression -> . expression EQEQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression LESS_THAN expression
    (49) expression -> . expression GREATER_THAN expression
    (50) expression -> . expression LTEQ expression
    (51) expression -> . expression GTEQ expression
    (52) expression -> . expression AND expression
    (53) expression -> . expression OR expression
    (54) expression -> . NOT expression
    (55) expression -> . MINUS expression
    (56) expression -> . LPAREN expression RPAREN
    (57) expression -> . NUMBER
    (58) expression -> . STRING
    (59) expression -> . MSTRING
    (60) expression -> . TRUE
    (61) expression -> . FALSE
    (62) expression -> . ID
    (63) expression -> . array_access
    (64) expression -> . function_call
    (65) expression -> . ID LPAREN expression RPAREN
    (66) expression -> . LEN LPAREN expression RPAREN
    (67) expression -> . expression QMARK expression COLON expression
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    NOT             shift and go to state 60
    MINUS           shift and go to state 59
    LPAREN          shift and go to state 61
    NUMBER          shift and go to state 62
    STRING          shift and go to state 63
    MSTRING         shift and go to state 64
    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    ID              shift and go to state 67
    LEN             shift and go to state 70
    PRINT           shift and go to state 47

    expression                     shift and go to state 147
    array_access                   shift and go to state 68
    function_call                  shift and go to state 69

state 144

    (40) while_stmt -> WHILE LPAREN expression RPAREN BEGIN stmt_list . END
    (15) stmt_list -> stmt_list . statement
    (17) statement -> . var_declaration
    (18) statement -> . assignment
    (19) statement -> . function_call_stmt
    (20) statement -> . return_stmt
    (21) statement -> . if_stmt
    (22) statement -> . for_stmt
    (23) statement -> . while_stmt
    (24) var_declaration -> . ID DBL_COLON type SEMI_COLON
    (25) assignment -> . ID EQ expression SEMI_COLON
    (26) assignment -> . array_access EQ expression SEMI_COLON
    (28) function_call_stmt -> . function_call SEMI_COLON
    (35) return_stmt -> . RETURN expression SEMI_COLON
    (36) return_stmt -> . RETURN SEMI_COLON
    (37) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (39) for_stmt -> . FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
    (40) while_stmt -> . WHILE LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> . WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    END             shift and go to state 148
    ID              shift and go to state 31
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    PRINT           shift and go to state 47

    statement                      shift and go to state 54
    var_declaration                shift and go to state 34
    assignment                     shift and go to state 35
    function_call_stmt             shift and go to state 36
    return_stmt                    shift and go to state 37
    if_stmt                        shift and go to state 38
    for_stmt                       shift and go to state 39
    while_stmt                     shift and go to state 40
    array_access                   shift and go to state 41
    function_call                  shift and go to state 42

state 145

    (41) while_stmt -> WHILE LPAREN expression RPAREN DO BEGIN . stmt_list END
    (15) stmt_list -> . stmt_list statement
    (16) stmt_list -> . statement
    (17) statement -> . var_declaration
    (18) statement -> . assignment
    (19) statement -> . function_call_stmt
    (20) statement -> . return_stmt
    (21) statement -> . if_stmt
    (22) statement -> . for_stmt
    (23) statement -> . while_stmt
    (24) var_declaration -> . ID DBL_COLON type SEMI_COLON
    (25) assignment -> . ID EQ expression SEMI_COLON
    (26) assignment -> . array_access EQ expression SEMI_COLON
    (28) function_call_stmt -> . function_call SEMI_COLON
    (35) return_stmt -> . RETURN expression SEMI_COLON
    (36) return_stmt -> . RETURN SEMI_COLON
    (37) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (39) for_stmt -> . FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
    (40) while_stmt -> . WHILE LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> . WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    ID              shift and go to state 31
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    PRINT           shift and go to state 47

    stmt_list                      shift and go to state 149
    statement                      shift and go to state 33
    var_declaration                shift and go to state 34
    assignment                     shift and go to state 35
    function_call_stmt             shift and go to state 36
    return_stmt                    shift and go to state 37
    if_stmt                        shift and go to state 38
    for_stmt                       shift and go to state 39
    while_stmt                     shift and go to state 40
    array_access                   shift and go to state 41
    function_call                  shift and go to state 42

state 146

    (37) if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN . stmt_list END
    (38) if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN . stmt_list END ELSE BEGIN stmt_list END
    (15) stmt_list -> . stmt_list statement
    (16) stmt_list -> . statement
    (17) statement -> . var_declaration
    (18) statement -> . assignment
    (19) statement -> . function_call_stmt
    (20) statement -> . return_stmt
    (21) statement -> . if_stmt
    (22) statement -> . for_stmt
    (23) statement -> . while_stmt
    (24) var_declaration -> . ID DBL_COLON type SEMI_COLON
    (25) assignment -> . ID EQ expression SEMI_COLON
    (26) assignment -> . array_access EQ expression SEMI_COLON
    (28) function_call_stmt -> . function_call SEMI_COLON
    (35) return_stmt -> . RETURN expression SEMI_COLON
    (36) return_stmt -> . RETURN SEMI_COLON
    (37) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (39) for_stmt -> . FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
    (40) while_stmt -> . WHILE LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> . WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    ID              shift and go to state 31
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    PRINT           shift and go to state 47

    stmt_list                      shift and go to state 150
    statement                      shift and go to state 33
    var_declaration                shift and go to state 34
    assignment                     shift and go to state 35
    function_call_stmt             shift and go to state 36
    return_stmt                    shift and go to state 37
    if_stmt                        shift and go to state 38
    for_stmt                       shift and go to state 39
    while_stmt                     shift and go to state 40
    array_access                   shift and go to state 41
    function_call                  shift and go to state 42

state 147

    (39) for_stmt -> FOR LPAREN ID EQ expression TO expression . RPAREN BEGIN stmt_list END
    (42) expression -> expression . PLUS expression
    (43) expression -> expression . MINUS expression
    (44) expression -> expression . MULTIPLY expression
    (45) expression -> expression . DIVIDE expression
    (46) expression -> expression . EQEQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . LESS_THAN expression
    (49) expression -> expression . GREATER_THAN expression
    (50) expression -> expression . LTEQ expression
    (51) expression -> expression . GTEQ expression
    (52) expression -> expression . AND expression
    (53) expression -> expression . OR expression
    (67) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 151
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    MULTIPLY        shift and go to state 86
    DIVIDE          shift and go to state 87
    EQEQ            shift and go to state 88
    NEQ             shift and go to state 89
    LESS_THAN       shift and go to state 90
    GREATER_THAN    shift and go to state 91
    LTEQ            shift and go to state 92
    GTEQ            shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    QMARK           shift and go to state 96


state 148

    (40) while_stmt -> WHILE LPAREN expression RPAREN BEGIN stmt_list END .

    RCURLYEBR       reduce using rule 40 (while_stmt -> WHILE LPAREN expression RPAREN BEGIN stmt_list END .)
    ID              reduce using rule 40 (while_stmt -> WHILE LPAREN expression RPAREN BEGIN stmt_list END .)
    RETURN          reduce using rule 40 (while_stmt -> WHILE LPAREN expression RPAREN BEGIN stmt_list END .)
    IF              reduce using rule 40 (while_stmt -> WHILE LPAREN expression RPAREN BEGIN stmt_list END .)
    FOR             reduce using rule 40 (while_stmt -> WHILE LPAREN expression RPAREN BEGIN stmt_list END .)
    WHILE           reduce using rule 40 (while_stmt -> WHILE LPAREN expression RPAREN BEGIN stmt_list END .)
    PRINT           reduce using rule 40 (while_stmt -> WHILE LPAREN expression RPAREN BEGIN stmt_list END .)
    END             reduce using rule 40 (while_stmt -> WHILE LPAREN expression RPAREN BEGIN stmt_list END .)


state 149

    (41) while_stmt -> WHILE LPAREN expression RPAREN DO BEGIN stmt_list . END
    (15) stmt_list -> stmt_list . statement
    (17) statement -> . var_declaration
    (18) statement -> . assignment
    (19) statement -> . function_call_stmt
    (20) statement -> . return_stmt
    (21) statement -> . if_stmt
    (22) statement -> . for_stmt
    (23) statement -> . while_stmt
    (24) var_declaration -> . ID DBL_COLON type SEMI_COLON
    (25) assignment -> . ID EQ expression SEMI_COLON
    (26) assignment -> . array_access EQ expression SEMI_COLON
    (28) function_call_stmt -> . function_call SEMI_COLON
    (35) return_stmt -> . RETURN expression SEMI_COLON
    (36) return_stmt -> . RETURN SEMI_COLON
    (37) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (39) for_stmt -> . FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
    (40) while_stmt -> . WHILE LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> . WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    END             shift and go to state 152
    ID              shift and go to state 31
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    PRINT           shift and go to state 47

    statement                      shift and go to state 54
    var_declaration                shift and go to state 34
    assignment                     shift and go to state 35
    function_call_stmt             shift and go to state 36
    return_stmt                    shift and go to state 37
    if_stmt                        shift and go to state 38
    for_stmt                       shift and go to state 39
    while_stmt                     shift and go to state 40
    array_access                   shift and go to state 41
    function_call                  shift and go to state 42

state 150

    (37) if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list . END
    (38) if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list . END ELSE BEGIN stmt_list END
    (15) stmt_list -> stmt_list . statement
    (17) statement -> . var_declaration
    (18) statement -> . assignment
    (19) statement -> . function_call_stmt
    (20) statement -> . return_stmt
    (21) statement -> . if_stmt
    (22) statement -> . for_stmt
    (23) statement -> . while_stmt
    (24) var_declaration -> . ID DBL_COLON type SEMI_COLON
    (25) assignment -> . ID EQ expression SEMI_COLON
    (26) assignment -> . array_access EQ expression SEMI_COLON
    (28) function_call_stmt -> . function_call SEMI_COLON
    (35) return_stmt -> . RETURN expression SEMI_COLON
    (36) return_stmt -> . RETURN SEMI_COLON
    (37) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (39) for_stmt -> . FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
    (40) while_stmt -> . WHILE LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> . WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    END             shift and go to state 153
    ID              shift and go to state 31
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    PRINT           shift and go to state 47

    statement                      shift and go to state 54
    var_declaration                shift and go to state 34
    assignment                     shift and go to state 35
    function_call_stmt             shift and go to state 36
    return_stmt                    shift and go to state 37
    if_stmt                        shift and go to state 38
    for_stmt                       shift and go to state 39
    while_stmt                     shift and go to state 40
    array_access                   shift and go to state 41
    function_call                  shift and go to state 42

state 151

    (39) for_stmt -> FOR LPAREN ID EQ expression TO expression RPAREN . BEGIN stmt_list END

    BEGIN           shift and go to state 154


state 152

    (41) while_stmt -> WHILE LPAREN expression RPAREN DO BEGIN stmt_list END .

    RCURLYEBR       reduce using rule 41 (while_stmt -> WHILE LPAREN expression RPAREN DO BEGIN stmt_list END .)
    ID              reduce using rule 41 (while_stmt -> WHILE LPAREN expression RPAREN DO BEGIN stmt_list END .)
    RETURN          reduce using rule 41 (while_stmt -> WHILE LPAREN expression RPAREN DO BEGIN stmt_list END .)
    IF              reduce using rule 41 (while_stmt -> WHILE LPAREN expression RPAREN DO BEGIN stmt_list END .)
    FOR             reduce using rule 41 (while_stmt -> WHILE LPAREN expression RPAREN DO BEGIN stmt_list END .)
    WHILE           reduce using rule 41 (while_stmt -> WHILE LPAREN expression RPAREN DO BEGIN stmt_list END .)
    PRINT           reduce using rule 41 (while_stmt -> WHILE LPAREN expression RPAREN DO BEGIN stmt_list END .)
    END             reduce using rule 41 (while_stmt -> WHILE LPAREN expression RPAREN DO BEGIN stmt_list END .)


state 153

    (37) if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END .
    (38) if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END . ELSE BEGIN stmt_list END

    RCURLYEBR       reduce using rule 37 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END .)
    ID              reduce using rule 37 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END .)
    RETURN          reduce using rule 37 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END .)
    IF              reduce using rule 37 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END .)
    FOR             reduce using rule 37 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END .)
    WHILE           reduce using rule 37 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END .)
    PRINT           reduce using rule 37 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END .)
    END             reduce using rule 37 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END .)
    ELSE            shift and go to state 155


state 154

    (39) for_stmt -> FOR LPAREN ID EQ expression TO expression RPAREN BEGIN . stmt_list END
    (15) stmt_list -> . stmt_list statement
    (16) stmt_list -> . statement
    (17) statement -> . var_declaration
    (18) statement -> . assignment
    (19) statement -> . function_call_stmt
    (20) statement -> . return_stmt
    (21) statement -> . if_stmt
    (22) statement -> . for_stmt
    (23) statement -> . while_stmt
    (24) var_declaration -> . ID DBL_COLON type SEMI_COLON
    (25) assignment -> . ID EQ expression SEMI_COLON
    (26) assignment -> . array_access EQ expression SEMI_COLON
    (28) function_call_stmt -> . function_call SEMI_COLON
    (35) return_stmt -> . RETURN expression SEMI_COLON
    (36) return_stmt -> . RETURN SEMI_COLON
    (37) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (39) for_stmt -> . FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
    (40) while_stmt -> . WHILE LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> . WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    ID              shift and go to state 31
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    PRINT           shift and go to state 47

    stmt_list                      shift and go to state 156
    statement                      shift and go to state 33
    var_declaration                shift and go to state 34
    assignment                     shift and go to state 35
    function_call_stmt             shift and go to state 36
    return_stmt                    shift and go to state 37
    if_stmt                        shift and go to state 38
    for_stmt                       shift and go to state 39
    while_stmt                     shift and go to state 40
    array_access                   shift and go to state 41
    function_call                  shift and go to state 42

state 155

    (38) if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE . BEGIN stmt_list END

    BEGIN           shift and go to state 157


state 156

    (39) for_stmt -> FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list . END
    (15) stmt_list -> stmt_list . statement
    (17) statement -> . var_declaration
    (18) statement -> . assignment
    (19) statement -> . function_call_stmt
    (20) statement -> . return_stmt
    (21) statement -> . if_stmt
    (22) statement -> . for_stmt
    (23) statement -> . while_stmt
    (24) var_declaration -> . ID DBL_COLON type SEMI_COLON
    (25) assignment -> . ID EQ expression SEMI_COLON
    (26) assignment -> . array_access EQ expression SEMI_COLON
    (28) function_call_stmt -> . function_call SEMI_COLON
    (35) return_stmt -> . RETURN expression SEMI_COLON
    (36) return_stmt -> . RETURN SEMI_COLON
    (37) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (39) for_stmt -> . FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
    (40) while_stmt -> . WHILE LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> . WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    END             shift and go to state 158
    ID              shift and go to state 31
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    PRINT           shift and go to state 47

    statement                      shift and go to state 54
    var_declaration                shift and go to state 34
    assignment                     shift and go to state 35
    function_call_stmt             shift and go to state 36
    return_stmt                    shift and go to state 37
    if_stmt                        shift and go to state 38
    for_stmt                       shift and go to state 39
    while_stmt                     shift and go to state 40
    array_access                   shift and go to state 41
    function_call                  shift and go to state 42

state 157

    (38) if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN . stmt_list END
    (15) stmt_list -> . stmt_list statement
    (16) stmt_list -> . statement
    (17) statement -> . var_declaration
    (18) statement -> . assignment
    (19) statement -> . function_call_stmt
    (20) statement -> . return_stmt
    (21) statement -> . if_stmt
    (22) statement -> . for_stmt
    (23) statement -> . while_stmt
    (24) var_declaration -> . ID DBL_COLON type SEMI_COLON
    (25) assignment -> . ID EQ expression SEMI_COLON
    (26) assignment -> . array_access EQ expression SEMI_COLON
    (28) function_call_stmt -> . function_call SEMI_COLON
    (35) return_stmt -> . RETURN expression SEMI_COLON
    (36) return_stmt -> . RETURN SEMI_COLON
    (37) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (39) for_stmt -> . FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
    (40) while_stmt -> . WHILE LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> . WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    ID              shift and go to state 31
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    PRINT           shift and go to state 47

    stmt_list                      shift and go to state 159
    statement                      shift and go to state 33
    var_declaration                shift and go to state 34
    assignment                     shift and go to state 35
    function_call_stmt             shift and go to state 36
    return_stmt                    shift and go to state 37
    if_stmt                        shift and go to state 38
    for_stmt                       shift and go to state 39
    while_stmt                     shift and go to state 40
    array_access                   shift and go to state 41
    function_call                  shift and go to state 42

state 158

    (39) for_stmt -> FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END .

    RCURLYEBR       reduce using rule 39 (for_stmt -> FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END .)
    ID              reduce using rule 39 (for_stmt -> FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END .)
    RETURN          reduce using rule 39 (for_stmt -> FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END .)
    IF              reduce using rule 39 (for_stmt -> FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END .)
    FOR             reduce using rule 39 (for_stmt -> FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END .)
    WHILE           reduce using rule 39 (for_stmt -> FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END .)
    PRINT           reduce using rule 39 (for_stmt -> FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END .)
    END             reduce using rule 39 (for_stmt -> FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END .)


state 159

    (38) if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list . END
    (15) stmt_list -> stmt_list . statement
    (17) statement -> . var_declaration
    (18) statement -> . assignment
    (19) statement -> . function_call_stmt
    (20) statement -> . return_stmt
    (21) statement -> . if_stmt
    (22) statement -> . for_stmt
    (23) statement -> . while_stmt
    (24) var_declaration -> . ID DBL_COLON type SEMI_COLON
    (25) assignment -> . ID EQ expression SEMI_COLON
    (26) assignment -> . array_access EQ expression SEMI_COLON
    (28) function_call_stmt -> . function_call SEMI_COLON
    (35) return_stmt -> . RETURN expression SEMI_COLON
    (36) return_stmt -> . RETURN SEMI_COLON
    (37) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END
    (38) if_stmt -> . IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END
    (39) for_stmt -> . FOR LPAREN ID EQ expression TO expression RPAREN BEGIN stmt_list END
    (40) while_stmt -> . WHILE LPAREN expression RPAREN BEGIN stmt_list END
    (41) while_stmt -> . WHILE LPAREN expression RPAREN DO BEGIN stmt_list END
    (27) array_access -> . ID LSQUAREBR expression RSQUAREBR
    (29) function_call -> . ID LPAREN arg_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (31) function_call -> . PRINT LPAREN arg_list RPAREN
    (32) function_call -> . PRINT LPAREN RPAREN

    END             shift and go to state 160
    ID              shift and go to state 31
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    FOR             shift and go to state 45
    WHILE           shift and go to state 46
    PRINT           shift and go to state 47

    statement                      shift and go to state 54
    var_declaration                shift and go to state 34
    assignment                     shift and go to state 35
    function_call_stmt             shift and go to state 36
    return_stmt                    shift and go to state 37
    if_stmt                        shift and go to state 38
    for_stmt                       shift and go to state 39
    while_stmt                     shift and go to state 40
    array_access                   shift and go to state 41
    function_call                  shift and go to state 42

state 160

    (38) if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END .

    RCURLYEBR       reduce using rule 38 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END .)
    ID              reduce using rule 38 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END .)
    RETURN          reduce using rule 38 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END .)
    IF              reduce using rule 38 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END .)
    FOR             reduce using rule 38 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END .)
    WHILE           reduce using rule 38 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END .)
    PRINT           reduce using rule 38 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END .)
    END             reduce using rule 38 (if_stmt -> IF LSQUAREBR LSQUAREBR expression RSQUAREBR RSQUAREBR BEGIN stmt_list END ELSE BEGIN stmt_list END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 127 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 141 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 141 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 141 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 141 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 141 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 141 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 141 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 141 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 141 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 141 resolved as shift
WARNING: shift/reduce conflict for AND in state 141 resolved as shift
WARNING: shift/reduce conflict for OR in state 141 resolved as shift
WARNING: shift/reduce conflict for QMARK in state 141 resolved as shift
